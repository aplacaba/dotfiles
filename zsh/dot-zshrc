if [[ ! -f $HOME/.zinit/bin/zinit.zsh ]]; then
    print -P "%F{33}▓▒░ %F{220}Installing %F{33}DHARMA%F{220} Initiative Plugin Manager (%F{33}zdharma/zinit%F{220})…%f"
    command mkdir -p "$HOME/.zinit" && command chmod g-rwX "$HOME/.zinit"
    command git clone https://github.com/zdharma/zinit "$HOME/.zinit/bin" && \
        print -P "%F{33}▓▒░ %F{34}Installation successful.%f%b" || \
        print -P "%F{160}▓▒░ The clone has failed.%f%b"
fi

source "$HOME/.zinit/bin/zinit.zsh"
autoload -Uz _zinit
(( ${+_comps} )) && _comps[zinit]=_zinit

zinit ice from"gh-r" as"command" atload'eval "$(starship init zsh)"'
zinit load starship/starship

# A glance at the new for-syntax – load all of the above
# plugins with a single command. For more information see:
# https://zdharma.github.io/zinit/wiki/For-Syntax/
zinit for \
    light-mode  zsh-users/zsh-autosuggestions \
    light-mode  zdharma/fast-syntax-highlighting \
    zdharma/history-search-multi-word

# env vars
export OPENSSL_CONF=/etc/ssl
export DISPLAY=$(awk '/nameserver/ {print $2}' /etc/resolv.conf):0.0
# aliases

alias g='git'
alias gc='git commit'
alias gs='git status'
alias ls='ls -la'
alias xcopy='xclip -sel clip'

# clear all images
function docker-clear-images () {
    docker rmi docker rmi $(docker images --filter "dangling=true" -q --no-trunc)
}

# connect to prism instances
function prism-connect () {
    ssh -i ~/.ssh/prism.pem ec2-user@$1
}

function ec2-list () {
    aws ec2 describe-instances \
        --query "Reservations[*].Instances[*].{PublicIP:PublicIpAddress,Name:Tags[?Key=='Name']|[0].Value,Status:State.Name}" \
        --output table
}

# asdf
. $HOME/.asdf/asdf.sh
